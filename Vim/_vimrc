
" Vundle =================================================
" set the runtime path to include Vundle and initialize
if has("win32")
	set rtp+=~/vimfiles/bundle/Vundle.vim/
	let path='~/vimfiles/bundle'
	call vundle#begin(path)
else
	set rtp+=~/.vim/bundle/Vundle.vim
	call vundle#begin()
endif
" alternatively, pass a path where Vundle should install plugins
" "call vundle#begin('~/some/path/here')
"
" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" " The following are examples of different formats supported.
" " Keep Plugin commands between vundle#begin/end.
" " plugin on GitHub repo
" Plugin 'tpope/vim-fugitive'
" " plugin from http://vim-scripts.org/vim/scripts.html
" Plugin 'L9'
" " Git plugin not hosted on GitHub
" Plugin 'git://git.wincent.com/command-t.git'
" " git repos on your local machine (i.e. when working on your own plugin)
" Plugin 'file:///home/gmarik/path/to/plugin'
" " The sparkup vim script is in a subdirectory of this repo called vim.
" " Pass the path to set the runtimepath properly.
" Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" " Avoid a name conflict with L9
" Plugin 'user/L9', {'name': 'newL9'}
"
" Plugin 'bling/vim-airline'
Plugin 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}
Plugin 'flazz/vim-colorschemes'
Plugin 'scrooloose/nerdtree'
Plugin 'klen/python-mode'

" " All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" " To ignore plugin indent changes, instead use:
" "filetype plugin on
" "
" " Brief help
" " :PluginList          - list configured plugins
" " :PluginInstall(!)    - install (update) plugins
" " :PluginSearch(!) foo - search (or refresh cache first) for foo
" " :PluginClean(!)      - confirm (or auto-approve) removal of unused plugins
" "
" " see :h vundle for more details or wiki for FAQ
" " Put your non-Plugin stuff after this line

" airline ------
set laststatus=2

" Common ==============================================
filetype off                        " required
syntax on

let mapleader = "," 
let g:mapleader = ","

set autoread                        " Set to auto read when a file is changed from the outside
set nocompatible                    " be iMproved, required
set wildignore=*.o,*~,*.pyc         " Ignore compiled files
set so=3                            " Set 3 lines to the cursor - when moving vertically using j/k
set expandtab                       " Use spaces instead of tabs
set tabstop=4                       " number of visual spaces per TAB
set softtabstop=4                   " number of spaces in tab when editing
set autochdir

" Color ----------------------
colorscheme molokai

" GUI ====================================================
set number 					" show line numbers
set showcmd					" show command in bottom bar
set cursorline					" highlight current line
set wildmenu					" visual autocomplete for command menu
set lazyredraw					" redraw only when we need to.
set showmatch					" highlight matching [{()}]

if has("win32")
    "source $VIMRUNTIME/vimrc_example.vim
    source $VIMRUNTIME/mswin.vim
    " ²Ëµ¥ÂÒÂë
    "source $VIMRUNTIME/delmenu.vim
    "source $VIMRUNTIME/menu.vim
    behave mswin

	"Toggle Menu and Toolbar
	set guioptions-=m
	set guioptions-=T
	map <leader><F2> :if &guioptions =~# 'T' <Bar>
            \set guioptions-=T <Bar>
            \set guioptions-=m <bar>
            \else <Bar>
            \set guioptions+=T <Bar>
            \set guioptions+=m <Bar>
            \endif<CR>
endif 

" Searching ==============================================
set incsearch					" search as characters are entered
set hlsearch					" highlight matches
" Clear match hightlighting
nnoremap <leader><space> :nohlsearch<CR>

" NerdTree
map <silent><F2> :NERDTreeToggle<CR>

" Set utf8 as standard encoding and en_US as the standard language
set encoding=utf-8
set termencoding=utf-8
set fileencodings=utf-8,chinese,latin-1
if has("win32")
    set fileencoding=chinese
else
    set fileencoding=utf-8
endif 
language message zh_CN.utf-8

" Smart way to move between windows
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-h> <C-w>h
map <C-l> <C-w>l
